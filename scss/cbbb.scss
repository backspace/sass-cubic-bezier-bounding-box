// This is a Sass implementation of a bounding box algorithm for a cubic bezier from here:
// http://stackoverflow.com/a/24814530/760389
// https://jsfiddle.net/SalixAlba/QQnvm/4/

@function -cbbb-evaluate-at-t($axis-values, $t) {
  $at: 1 - $t;
  @return nth($axis-values, 1)*$at*$at*$at + 3*nth($axis-values, 2)*$t*$at*$at + 3*nth($axis-values, 3)*$t*$t*$at + nth($axis-values, 4)*$t*$t*$t;
}

// Taken from http://www.antimath.info/css/sass-sqrt-function/

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@function -cbbb-dimension-edges($axis-values) {
  $p0: nth($axis-values, 1);
  $p1: nth($axis-values, 2);
  $p2: nth($axis-values, 3);
  $p3: nth($axis-values, 4);

  $a: 3*$p3 - 9*$p2 + 9*$p1 - 3*$p0;
  $b: 6*$p0 - 12*$p1 + 6*$p2;
  $c: 3*$p1 - 3*$p0;

  $disc: $b*$b - 4*$a*$c;

  $min: $p0;
  $max: $p0;

  @if $p3 < $min {
    $min: $p3;
  }

  @if $p3 > $max {
    $max: $p3;
  }

  @if $disc >= 0 {
    $t1: (-$b + sqrt($disc))/(2*$a);

    @if $t1 > 0 and $t1 < 1 {
      $t: -cbbb-evaluate-at-t($axis-values, $t1);

      @if $t < $min {
        $min: $t;
      }

      @if $t > $max {
        $max: $t;
      }
    }

    $t2: (-$b - sqrt($disc))/(2*$a);

    @if $t2 > 0 and $t2 < 1 {
      $t: -cbbb-evaluate-at-t($axis-values, $t2);

      @if $t < $min {
        $min: $t;
      }

      @if $t > $max {
        $max: $t;
      }
    }
  }

  @return $min, $max;
}

@function -cbbb-bounding-box-from-control-list($control-points) {
  $xs: 0, nth($control-points, 1), nth($control-points, 3), 1;
  $ys: 0, nth($control-points, 2), nth($control-points, 4), 1;

  $x-edges: -cbbb-dimension-edges($xs);
  $y-edges: -cbbb-dimension-edges($ys);

  @return (x-min: nth($x-edges, 1), x-max: nth($x-edges, 2), y-min: nth($y-edges, 1), y-max: nth($y-edges, 2));
}

@function -cbbb-min-max-y-from-control-list($control-points) {
  $bounding-box: -cbbb-bounding-box-from-control-list($control-points);

  @return map-get($bounding-box, 'y-min'), map-get($bounding-box, 'y-max');
}
